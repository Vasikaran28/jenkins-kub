pipeline {
    agent any

    environment {
        ACR_NAME = 'jenkinscontainer7' // Your ACR name
        IMAGE_NAME = 'python-app'
        IMAGE_TAG = 'v1'
        AKS_CLUSTER_NAME = 'jenkins_kub_testing' // Replace with your AKS cluster name
        RESOURCE_GROUP = 'kub_test' // Replace with your resource group
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm // Checkout the code from your repository
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image
                    sh "docker build -t ${ACR_NAME}.azurecr.io/${IMAGE_NAME}:${IMAGE_TAG} ."
                }
            }
        }

        stage('Login to ACR') {
            steps {
                script {
                    // Log in to Azure
                    sh 'az login --use-device-code' // This allows you to log in using your browser
                    // Log in to Azure Container Registry
                    sh "az acr login --name ${ACR_NAME}"
                }
            }
        }

        stage('Push to ACR') {
            steps {
                script {
                    // Push the Docker image to ACR
                    sh "docker push ${ACR_NAME}.azurecr.io/${IMAGE_NAME}:${IMAGE_TAG}"
                }
            }
        }

        stage('Deploy to AKS') {
            steps {
                script {
                    // Get the AKS credentials
                    sh "az aks get-credentials --resource-group ${RESOURCE_GROUP} --name ${AKS_CLUSTER_NAME} --overwrite-existing"
                    
                    // Deploy the application to AKS
                    sh "kubectl apply -f k8s/deployment.yaml" // Ensure this path is correct
                    
                    // Optional: You can also check the status of the deployment
                    sh "kubectl rollout status deployment/python-app" // Replace 'python-app' with your deployment name
                }
            }
        }

    }

    post {
        always {
            // Clean up Docker images
            sh "docker rmi ${ACR_NAME}.azurecr.io/${IMAGE_NAME}:${IMAGE_TAG} || true"
        }
    }
}
