pipeline {
    agent any

    environment {
        ACR_NAME = 'jenkinsContainer07' // Your ACR name
        IMAGE_NAME = 'python-app'
        IMAGE_TAG = 'v1'
        AKS_CLUSTER_NAME = 'jenkins_kub_testing' // Your AKS cluster name
        RESOURCE_GROUP = 'kub_rg' // Your resource group
        AZURE_SP_ID = credentials('azure-client-id') // Jenkins credentials ID for Service Principal ID
        AZURE_SP_SECRET = credentials('azure-client-secret') // Jenkins credentials ID for Service Principal Secret
        AZURE_TENANT_ID = credentials('tenant-id') // Jenkins credentials ID for Tenant ID
        AZURE_SUBSCRIPTION_ID = credentials('sub-id') // Jenkins credentials ID for Subscription ID
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm // Checkout the code from your repository
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image
                    sh "docker build -t ${ACR_NAME}.azurecr.io/${IMAGE_NAME}:${IMAGE_TAG} ."
                }
            }
        }

        stage('Login to Azure and ACR') {
            steps {
                script {
                    // Log in to Azure using Service Principal
                    sh """
                        az login --service-principal \
                        --username ${AZURE_SP_ID} \
                        --password ${AZURE_SP_SECRET} \
                        --tenant ${AZURE_TENANT_ID}
                    """

                    // Set the subscription
                    sh "az account set --subscription ${AZURE_SUBSCRIPTION_ID}"

                    // Log in to Azure Container Registry
                    sh "az acr login --name ${ACR_NAME}"
                }
            }
        }

        stage('Push to ACR') {
            steps {
                script {
                    // Push the Docker image to ACR
                    sh "docker push ${ACR_NAME}.azurecr.io/${IMAGE_NAME}:${IMAGE_TAG}"
                }
            }
        }

        stage('Deploy to AKS') {
            steps {
                script {
                    // Get the AKS credentials
                    sh "az aks get-credentials --resource-group ${RESOURCE_GROUP} --name ${AKS_CLUSTER_NAME} --overwrite-existing"

                    // Deploy the application to AKS
                    sh "kubectl apply -f k8s/deployment.yaml" // Ensure this path is correct

                    // Optional: You can also check the status of the deployment
                    sh "kubectl rollout status deployment/python-app" // Replace 'python-app' with your deployment name
                }
            }
        }
    }

    post {
        always {
            // Clean up Docker images
            sh "docker rmi ${ACR_NAME}.azurecr.io/${IMAGE_NAME}:${IMAGE_TAG} || true"
        }
    }
}
