pipeline {
    agent any

    environment {
        ACR_LOGIN = credentials('acr-credentials-id') // Use your Jenkins credentials ID
        ACR_NAME = 'jenkinsContainer07' // Your ACR name 
        IMAGE_NAME = 'python-app' // Your Docker image name
        IMAGE_TAG = 'v1' // Your Docker image tag
        AKS_CLUSTER_NAME = 'jenkins_kub_testing' // Replace with your AKS cluster name
        RESOURCE_GROUP = 'kub_test' // Replace with your resource group
        AZURE_CLIENT_ID = '' // Initialize for later use
        AZURE_CLIENT_SECRET = '' // Initialize for later use
        AZURE_TENANT_ID = '' // Initialize for later use
    }

    stages {
        stage('Set Azure Credentials') {
            steps {
                script {
                    // Set the Azure credentials from Jenkins into environment variables
                    env.AZURE_CLIENT_ID = credentials('azure-login-specs').clientId
                    env.AZURE_CLIENT_SECRET = credentials('azure-login-specs').clientSecret
                    env.AZURE_TENANT_ID = credentials('azure-login-specs').tenantId
                }
            }
        }

        stage('Checkout') {
            steps {
                checkout scm // Checkout the code from your repository
            }
        }

        stage('Test Docker') {
            steps {
                script {
                    sh 'docker --version' // Check Docker version
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image
                    sh "docker build -t ${ACR_NAME}.azurecr.io/${IMAGE_NAME}:${IMAGE_TAG} ."
                }
            }
        }

        stage('Login to ACR') {
            steps {
                script {
                    // Use the credentials stored in Jenkins to log in to ACR
                    sh 'echo $ACR_LOGIN_PSW | docker login ${ACR_NAME}.azurecr.io -u $ACR_LOGIN_USR --password-stdin'
                    
                    // Log in to Azure using service principal credentials
                    sh """
                    az login --service-principal \
                    --username ${AZURE_CLIENT_ID} \
                    --password ${AZURE_CLIENT_SECRET} \
                    --tenant ${AZURE_TENANT_ID}
                    """
                    
                    // Log in to Azure Container Registry
                    sh "az acr login --name ${ACR_NAME}"
                }
            }
        }

        stage('Push to ACR') {
            steps {
                script {
                    // Push Docker image to ACR
                    sh "docker push ${ACR_NAME}.azurecr.io/${IMAGE_NAME}:${IMAGE_TAG}"
                }
            }
        }

        stage('Deploy to AKS') {
            steps {
                script {
                    echo 'Deploying to AKS...'
                    
                    // Get the AKS credentials
                    sh "az aks get-credentials --resource-group ${RESOURCE_GROUP} --name ${AKS_CLUSTER_NAME}"
                    
                    // Deploy the application to AKS (assuming you have a deployment YAML file)
                    sh "kubectl apply -f k8s/deployment.yaml" // Adjust the path to your deployment YAML file
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully.'
        }
        failure {
            echo 'Pipeline failed.'
        }
        always {
            // Clean up Docker images
            sh "docker rmi ${ACR_NAME}.azurecr.io/${IMAGE_NAME}:${IMAGE_TAG} || true"
        }
    }
}
